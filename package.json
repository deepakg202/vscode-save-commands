{
	"name": "save-commands",
	"displayName": "Save Commands",
	"description": "Simple VSCode Extension to save and execute terminal commands.",
	"icon": "media/save-commands.png",
	"version": "0.6.0",
	"engines": {
		"vscode": "^1.74.0"
	},
	"keywords": ["commands", "productivity", "workflows", "terminal"],
	"categories": ["Other"],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"title": "Save Commands",
			"properties": {
				"save-commands.placeholderType": {
					"type": "string",
					"default": "doubleCurlyBraces",
					"enum": [
						"singleCurlyBraces",
						"doubleCurlyBraces",
						"singleAngleBraces",
						"doubleAngleBraces"
					],
					"description": "Set placeholder string type. This will be used to detect placeholders in your commands. This won't affect your existing commands",
					"enumDescriptions": ["{name}", "{{name}}", "<name>", "<<name>>"]
				}
			}
		},
		"commands": [
			{
				"command": "save-commands.refreshView",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "save-commands.deleteCommand",
				"title": "Delete Command",
				"category": "Save Commands"
			},
			{
				"command": "save-commands.reset",
				"title": "Delete All Saved Commands",
				"category": "Save Commands"
			},
			{
				"command": "save-commands.addCommand",
				"title": "Add Command",
				"icon": {
					"light": "resources/light/add.svg",
					"dark": "resources/dark/add.svg"
				},
				"category": "Save Commands"
			},
			{
				"command": "save-commands.editCommand",
				"title": "Edit Command",
				"icon": {
					"light": "resources/light/edit.svg",
					"dark": "resources/dark/edit.svg"
				},
				"category": "Save Commands"
			},
			{
				"command": "save-commands.editFolder",
				"title": "Edit Folder",
				"icon": {
					"light": "resources/light/edit.svg",
					"dark": "resources/dark/edit.svg"
				},
				"category": "Save Commands"
			},
			{
				"command": "save-commands.deleteCommands",
				"title": "Delete Commands",
				"icon": {
					"light": "resources/light/trash.svg",
					"dark": "resources/dark/trash.svg"
				},
				"category": "Save Commands"
			},
			{
				"command": "save-commands.runCommand",
				"title": "Try Running Command",
				"category": "Save Commands",
				"icon": {
					"light": "resources/light/run.svg",
					"dark": "resources/dark/run.svg"
				}
			},
			{
				"command": "save-commands.runCommandInActiveTerminal",
				"title": "Try Running Command In Active Terminal",
				"category": "Save Commands",
				"icon": {
					"light": "resources/light/run_active.svg",
					"dark": "resources/dark/run_active.svg"
				}
			},
			{
				"command": "save-commands.copyCommand",
				"title": "Copy Command to Clipboard",
				"category": "Save Commands",
				"icon": {
					"light": "resources/light/copy.svg",
					"dark": "resources/dark/copy.svg"
				}
			},
			{
				"command": "save-commands.addFolder",
				"title": "Add Folder",
				"category": "Save Commands",
				"icon": {
					"light": "resources/light/new_folder.svg",
					"dark": "resources/dark/new_folder.svg"
				}
			},
			{
				"command": "save-commands.deleteFolder",
				"title": "Delete Folder",
				"category": "Save Commands",
				"icon": {
					"light": "resources/light/trash.svg",
					"dark": "resources/dark/trash.svg"
				}
			},
			{
				"command": "save-commands.export",
				"title": "Export",
				"category": "Save Commands",
				"icon": {
					"light": "resources/light/export.svg",
					"dark": "resources/dark/export.svg"
				}
			},
			{
				"command": "save-commands.import",
				"title": "Import",
				"category": "Save Commands",
				"icon": {
					"light": "resources/light/import.svg",
					"dark": "resources/dark/import.svg"
				}
			}
		],
		"views": {
			"explorer": [
				{
					"id": "save-commands-view",
					"name": "Saved Commands"
				}
			]
		},
		"menus": {
			"commandPalette": [
				{
					"command": "save-commands.refreshView",
					"when": "false"
				},
				{
					"command": "save-commands.deleteCommand",
					"when": "false"
				},
				{
					"command": "save-commands.deleteCommands",
					"when": "false"
				},
				{
					"command": "save-commands.editCommand",
					"when": "false"
				},
				{
					"command": "save-commands.runCommand",
					"when": "false"
				},
				{
					"command": "save-commands.runCommandInActiveTerminal",
					"when": "false"
				},
				{
					"command": "save-commands.copyCommand",
					"when": "false"
				},
				{
					"command": "save-commands.reset"
				},
				{
					"command": "save-commands.addFolder",
					"when": "false"
				},
				{
					"command": "save-commands.deleteFolder",
					"when": "false"
				},
				{
					"command": "save-commands.addCommand",
					"when": "false"
				},
				{
					"command": "save-commands.editFolder",
					"when": "false"
				},
				{
					"command": "save-commands.import"
				},
				{
					"command": "save-commands.export"
				}
			],
			"view/title": [
				{
					"command": "save-commands.reset",
					"when": "view == save-commands-view"
				},
				{
					"command": "save-commands.export",
					"when": "view == save-commands-view",
					"group": "Backup"
				},
				{
					"command": "save-commands.import",
					"when": "view == save-commands-view",
					"group": "Backup"
				},
				{
					"command": "save-commands.refreshView",
					"when": "view == save-commands-view",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "save-commands.editCommand",
					"when": "view == save-commands-view && viewItem == command"
				},
				{
					"command": "save-commands.deleteCommand",
					"when": "view == save-commands-view && viewItem == command"
				},
				{
					"command": "save-commands.deleteFolder",
					"when": "view == save-commands-view && viewItem == folder"
				},
				{
					"command": "save-commands.editFolder",
					"when": "view == save-commands-view && viewItem == folder"
				},
				{
					"command": "save-commands.copyCommand",
					"when": "view == save-commands-view && viewItem == command",
					"group": "inline"
				},
				{
					"command": "save-commands.runCommand",
					"group": "inline",
					"when": "view == save-commands-view && viewItem == command"
				},
				{
					"command": "save-commands.runCommandInActiveTerminal",
					"group": "inline",
					"when": "view == save-commands-view && viewItem == command"
				},
				{
					"command": "save-commands.addCommand",
					"group": "inline",
					"when": "view == save-commands-view && viewItem == root || viewItem == folder"
				},
				{
					"command": "save-commands.deleteCommands",
					"when": "view == save-commands-view && viewItem == root"
				},
				{
					"command": "save-commands.addFolder",
					"group": "inline",
					"when": "view == save-commands-view && viewItem == root || viewItem == folder"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "yarn run package",
		"compile": "webpack --config ./build/node-extension.webpack.config.js",
		"watch": "webpack --watch --config ./build/node-extension.webpack.config.js",
		"package": "webpack --mode production --devtool hidden-source-map --config ./build/node-extension.webpack.config.js",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "yarn run test-compile && yarn run lint",
		"lint": "biome lint ./src",
		"lint:fix": "biome lint --write --unsafe ./src",
		"format": "biome format --write ./src",
		"test": "node ./out/test/runTest.js",
		"unit-test": "mocha"
	},
	"devDependencies": {
		"@biomejs/biome": "^1.8.3",
		"@types/glob": "^8.1.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "^18.6.4",
		"@types/vscode": "^1.74.0",
		"@typescript-eslint/eslint-plugin": "^5.59.0",
		"@typescript-eslint/parser": "^5.59.0",
		"@vscode/test-electron": "^2.1.5",
		"glob": "^11.0.0",
		"mocha": "^10.2.0",
		"ts-loader": "^9.4.2",
		"ts-node": "^10.9.1",
		"typescript": "^5.0.4",
		"vscode-test": "^1.6.1",
		"webpack": "^5.80.0",
		"webpack-cli": "^5.0.2"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/deepakg202/vscode-save-commands"
	},
	"license": "MIT",
	"publisher": "deepakgupta191199",
	"dependencies": {
		"class-transformer": "^0.5.1",
		"reflect-metadata": "^0.1.13"
	}
}
